// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE

import * as $$Date from "./date.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Printf from "bs-platform/lib/es6/printf.js";
import * as $$String from "bs-platform/lib/es6/string.js";
import * as Caml_builtin_exceptions from "bs-platform/lib/es6/caml_builtin_exceptions.js";

function make(color, name, period, amount) {
  return {
          name: name,
          period: period,
          amount: amount,
          color: color
        };
}

function getFormattedAmountString(t) {
  var intPart = t.amount | 0;
  var aux = function (_acc, _x) {
    while(true) {
      var x = _x;
      var acc = _acc;
      var n = x % 1000;
      if (n !== 0) {
        _x = x / 1000 | 0;
        _acc = /* :: */[
          String(n),
          acc
        ];
        continue ;
        
      } else {
        return acc;
      }
    };
  };
  var parts = aux(/* [] */0, intPart);
  var wholePart = $$String.concat(",", parts);
  var decPart = $$String.sub(Curry._1(Printf.sprintf(/* Format */[
                /* Float */Block.__(8, [
                    /* Float_f */0,
                    /* No_padding */0,
                    /* Lit_precision */[2],
                    /* End_of_format */0
                  ]),
                "%.2f"
              ]), t.amount - intPart), 1, 3);
  return "$" + (wholePart + decPart);
}

function getPeriodString(t) {
  var match = t.period;
  switch (match) {
    case 0 : 
        return "Monthly";
    case 1 : 
        return "Weekly";
    case 2 : 
        return "Daily";
    
  }
}

function period_of_string(s) {
  switch (s) {
    case "Daily" : 
        return /* Daily */2;
    case "Monthly" : 
        return /* Monthly */0;
    case "Weekly" : 
        return /* Weekly */1;
    default:
      throw [
            Caml_builtin_exceptions.failure,
            "Unrecognized period string: " + s
          ];
  }
}

function summarizePeriod(date, period) {
  switch (period) {
    case 0 : 
        var name = $$Date.monthToString(date.getMonth());
        return "the month of " + (name + (" " + String(date.getFullYear())));
    case 1 : 
        var day = date.getDay();
        var dateMs = Curry._1($$Date.int_of_date, date);
        var ms = 1000.0 * 60 * 60 * 24 * $$Date.int_of_day(day);
        var firstDay = Curry._1($$Date.date_of_float, dateMs - ms);
        var weekSummary = summarizePeriod(firstDay, /* Daily */2);
        return "the week of " + weekSummary;
    case 2 : 
        return $$Date.dayToString(date.getDay()) + (" " + ($$Date.monthToString(date.getMonth()) + (" " + (String(date.getDate()) + (", " + String(date.getFullYear()))))));
    
  }
}

var monthly = /* Monthly */0;

var weekly = /* Weekly */1;

var daily = /* Daily */2;

var colors = /* :: */[
  "#df7a7a",
  /* :: */[
    "#7adf7a",
    /* :: */[
      "#74d9da",
      /* :: */[
        "#7a7adf",
        /* :: */[
          "#d9da74",
          /* :: */[
            "#d974da",
            /* :: */[
              "#dad974",
              /* [] */0
            ]
          ]
        ]
      ]
    ]
  ]
];

export {
  monthly ,
  weekly ,
  daily ,
  colors ,
  make ,
  getFormattedAmountString ,
  getPeriodString ,
  period_of_string ,
  summarizePeriod ,
  
}
/* Date Not a pure module */
